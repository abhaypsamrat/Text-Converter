{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","Navbar","props","className","to","tittle","type","id","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","onClick","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","filter","element","length","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uLAEe,SAASA,IACpB,OACI,8BACI,oEACuC,0CADvC,QAC4D,0CAD5D,6CAEoB,qCAFpB,QAEoC,sCAFpC,wHAGuD,6CAHvD,sDAIoB,8CAJpB,uCAI+E,2CAJ/E,iBAKI,uCALJ,sF,WCFG,SAASC,EAAOC,GAC7B,OACE,8BACE,qBAAKC,UAAU,8CAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,IAAlC,SAAuCF,EAAMG,SAC7C,wBAAQF,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMH,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,SACE,qBAAIJ,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOC,GAAG,QAAzD,oBAEF,oBAAID,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,SAA9B,SAAwCF,EAAMF,sB,YChB/C,SAASQ,EAASN,GAE7B,IA6BA,EAAwBO,mBAAS,2BAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACI,qCACI,sBAAKR,UAAU,YAAf,UACI,6BAAKD,EAAMU,UACX,qBAAKT,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAeU,MAAOH,EAAMI,SAZzC,SAACC,GAEpBJ,EAAQI,EAAMC,OAAOH,QAUiEN,GAAG,QAAQU,KAAK,QAG9F,wBAAQd,UAAU,oCAAoCe,QAvC5C,WAElB,IAAIC,EAAUT,EAAKU,cACnBT,EAAQQ,IAoCA,kCAEA,wBAAQhB,UAAU,oCAAoCe,QAnC5C,WAElB,IAAIC,EAAUT,EAAKW,cACnBV,EAAQQ,IAgCA,kCAEA,wBAAQhB,UAAU,mCAAmCe,QA/BxC,WAGrBP,EADc,KA6BN,wBAEA,wBAAQR,UAAU,yBAAyBe,QA3BpC,WACf,IAAIR,EAAOY,SAASC,eAAe,SACnCb,EAAKc,SACLC,UAAUC,UAAUC,UAAUjB,EAAKG,QAwB3B,0BAGJ,sBAAKV,UAAU,iBAAf,UACI,mDAGA,8BAAIO,EAAKkB,MAAM,KAAKC,QAAO,SAACC,GAAc,OAA0B,IAAnBA,EAAQC,UAAgBA,OAAzE,cAA4FrB,EAAKqB,OAAjG,iBACA,8BAAI,KAAQrB,EAAKkB,MAAM,KAAKG,OAA5B,uBACA,yCAGA,4BAAIrB,U,WCjCLsB,MArBf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC/B,EAAD,CAAQI,OAAO,gBAAgBL,MAAM,wBAErC,qBAAKG,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8B,KAAK,SAAZ,SACE,cAACjC,EAAD,MAEF,cAAC,IAAD,CAAOiC,KAAK,IAAZ,SACE,cAACzB,EAAD,CAAUI,QAAQ,2CCPjBsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,SAM1BW,M","file":"static/js/main.1b8d9b39.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <p>\r\n                This appication is used to convert <b>uppercase</b> and <b>lowercase</b> of any text or sentence.\r\n                Simply write or <b>copy</b> and <b>paste</b> the text into the text area below and click the required button.\r\n                You can also copy your sentence by clicking on the <mark>Copy Text</mark> button and clear your sentence by\r\n                clicking on the <mark>Clear Text</mark> button. Appication count number of <b>characters</b> and number of\r\n                <b> words</b> in your sentence. It suggest the minimum required time to read your sentence.\r\n            </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.tittle}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/Home\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/About\">{props.About}</Link>\r\n              </li>\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n\r\n        let newText = '';\r\n        setText(newText)\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState(\"Enter your text here...\");\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n\r\n                <button className=\"btn btn-outline-success my-1 mx-3\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n\r\n                <button className=\"btn btn-outline-success my-1 mx-3\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n\r\n                <button className=\"btn btn-outline-danger my-1 mx-3\" onClick={handleClearClick}>Clear Text</button>\r\n\r\n                <button className=\"btn btn-secondary my-1\" onClick={handleCopy}>Copy Text</button>\r\n            </div>\r\n\r\n            <div className=\"container my-3\">\r\n                <h2>Your text summary</h2>\r\n                {/* this below line used for count words and characters */}\r\n\r\n                <p>{text.split(\" \").filter((element) => { return element.length !== 0 }).length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes for read</p>\r\n                <h3>Preview</h3>\r\n                {/* this is used for show all content */}\r\n\r\n                <p>{text}</p>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport About from \"./components/About\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextForm from \"./components/TextForm\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar tittle=\"TextConverter\" About=\"About TextConverter\" />\r\n\r\n        <div className=\"container my-3\">\r\n          <Switch>\r\n            <Route path=\"/about\">\r\n              <About />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <TextForm heading=\"Enter the text to analyze\" />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}